<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="storeMapper">
	<resultMap type="StoreInfo" id="StoreInfoResult">
		<result column="SELLER_PAGE_NO" property="sellerPageNo"/>
		<result column="BUSINESS_NO" property="businessNo"/>
		<result column="SELLER_EXPLAIN" property="sellerExplain"/>
		<result column="SP_CHANGE_NAME" property="spChangeName"/>
		<result column="P_CATEGORY" property="prCategory"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="P_NO" property="prNo"/>
		<result column="P_TITLE" property="prTitle"/>
		<result column="P_PRICE" property="prPrice"/>
		<result column="P_ENROLLDATE" property="prEnrollDate"/>
		<result column="P_STAR" property="prStar"/>
		<result column="P_CHANGE_NAME" property="prChangeName"/>
		<result column="P_STATUS" property="prStatus"/>
		<result column="USER_NO" property="userNo"/>
		<result column="REVIEW_COUNT" property="reviewCount"/>
		<result column="LOVE_DATE" property="loveDate"/>
	</resultMap>
	<select id="selectSellersStore" resultMap="StoreInfoResult">
		SELECT	SELLER_PAGE_NO,
				BUSINESS_NO,
				SELLER_EXPLAIN,
				SP_CHANGE_NAME,
				STORE_NAME
		FROM	SELLER_PAGE
		JOIN	SELLER_INFO USING(BUSINESS_NO)
		WHERE	SELLER_PAGE_NO = #{sellerPageNo}
	</select>
	<select id="getCategory" resultMap="StoreInfoResult">
		SELECT	P_CATEGORY
		FROM	PRODUCT_CATEGORY
		WHERE	SELLER_PAGE_NO = #{sellerPageNo}
	</select>
	<select id="selectProductCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	PRODUCT
		JOIN	PRODUCT_CATEGORY USING(C_NO)
		WHERE	SELLER_PAGE_NO = CAST(#{sellerPageNo} AS INTEGER)
		AND		P_STATUS = 'Y'
	</select>
	<select id="selectProductList" resultMap="StoreInfoResult">
		SELECT	P_NO,
				P_TITLE,
				P_CATEGORY,
				P_PRICE,
				P_STAR,
				P_CHANGE_NAME,
				COALESCE(REVIEW_COUNT, 0) AS REVIEW_COUNT,
				LOVE_DATE
		FROM	PRODUCT
		JOIN	PRODUCT_CATEGORY USING(C_NO)
		LEFT JOIN	(SELECT P_NO, USER_NO, LOVE_DATE FROM LOVE_IT WHERE USER_NO = CAST(#{userNo} AS INTEGER)) LOVE_IT USING(P_NO)
		LEFT JOIN	(SELECT P_NO, COUNT(REPLY_NO) AS REVIEW_COUNT FROM REVIEW GROUP BY P_NO) REVIEW_COUNT_TABLE USING(P_NO)
		WHERE	SELLER_PAGE_NO = CAST(#{sellerPageNo} AS INTEGER)
		AND		P_STATUS = 'Y'
		<if test="order == 0">
		ORDER BY P_STAR DESC
		</if>
		<if test="order == 1">
		ORDER BY P_NO DESC
		</if>
		<if test="order == 2">
		ORDER BY P_PRICE ASC
		</if>
		<if test="order == 3">
		ORDER BY P_PRICE DESC
		</if>
		<if test="order == 4">
		ORDER BY REVIEW_COUNT DESC
		</if>
	</select>
	<select id="selectCategoryCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	PRODUCT
		JOIN	PRODUCT_CATEGORY USING(C_NO)
		WHERE	SELLER_PAGE_NO = CAST(#{sellerPageNo} AS INTEGER)
		AND		P_CATEGORY = #{prCategory}
		AND		P_STATUS = 'Y'
	</select>
	<select id="selectProductCategory" resultMap="StoreInfoResult">
		SELECT	P_NO,
				P_TITLE,
				P_CATEGORY,
				P_PRICE,
				P_STAR,
				P_CHANGE_NAME,
				COALESCE(REVIEW_COUNT, 0) AS REVIEW_COUNT
		FROM	PRODUCT
		JOIN	PRODUCT_CATEGORY USING(C_NO)
		LEFT JOIN	(SELECT P_NO, COUNT(REPLY_NO) AS REVIEW_COUNT FROM REVIEW GROUP BY P_NO) REVIEW_COUNT_TABLE USING(P_NO)
		WHERE	SELLER_PAGE_NO = CAST(#{sellerPageNo} AS INTEGER)
		AND		P_CATEGORY = #{prCategory}
		AND		P_STATUS = 'Y'
		<if test="order == 0">
		ORDER BY P_STAR DESC
		</if>
		<if test="order == 1">
		ORDER BY P_NO DESC
		</if>
		<if test="order == 2">
		ORDER BY P_PRICE ASC
		</if>
		<if test="order == 3">
		ORDER BY P_PRICE DESC
		</if>
		<if test="order == 4">
		ORDER BY REVIEW_COUNT DESC
		</if>
	</select>
	<select id="ajaxAlarmCheck" resultType="_int">
		SELECT	COUNT(*)
		FROM	USER_ALARM
		WHERE	USER_NO = #{userNo}
		AND		SELLER_PAGE_NO = #{sellerPageNo}
	</select>
	<insert id="ajaxAlarmOn">
		INSERT INTO USER_ALARM(
				USER_NO,
				SELLER_PAGE_NO,
				ALARM
		)VALUES(
				#{userNo},
				#{sellerPageNo},
				1)
	</insert>
	<delete id="ajaxAlarmOff">
		DELETE FROM USER_ALARM
		WHERE	USER_NO = #{userNo}
		AND		SELLER_PAGE_NO = #{sellerPageNo}
	</delete>
	<select id="ajaxLoveitCheck" resultType="_int">
		SELECT	COUNT(*)
		FROM	LOVE_IT
		WHERE	USER_NO = #{userNo}
		AND		P_NO = #{prNo}
	</select>
	<insert id="ajaxLoveitOn">
		INSERT INTO LOVE_IT(
				USER_NO,
				P_NO,
				LOVE_DATE
		)VALUES(
				#{userNo},
				#{prNo},
				default)
	</insert>
	<delete id="ajaxLoveitOff">
		DELETE FROM LOVE_IT
		WHERE	USER_NO = #{userNo}
		AND		P_NO = #{prNo}
	</delete>
</mapper>