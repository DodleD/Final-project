<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="managerMapper">

	<!-- 판매자 정보 resultMap -->
	<resultMap type="Seller" id="sellerListResult">
		<result column="user_no" property="userNo"/>
		<result column="user_name" property="userName"/>
		<result column="user_id" property="userId"/>
		<result column="business_no" property="businessNo"/>
		<result column="business_name" property="businessName"/>
		<result column="sub_business_name" property="subBusinessName"/>
		<result column="open_business_date" property="openBusinessDate"/>
		<result column="store_name" property="storeName"/>
		<result column="crn" property="crn"/>
		<result column="main_business_name" property="mainBusinessName"/>
		<result column="main_item_name" property="mainItemName"/>
		<result column="business_address" property="businessAddress"/>
		<result column="business_account" property="businessAccount"/>
		<result column="application_date" property="applicationDate"/>
	</resultMap>
	
	<!-- 회원 정보 resultMap -->
	<resultMap type="Member" id="memberListResult">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="EMAIL" property="email"/>
		<result column="USER_NAME" property="userName"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="BIRTHDAY" property="birthday"/>
		<result column="GENDER" property="gender"/>
		<result column="ADDRESS" property="address"/>
		<result column="PHONE" property="phone"/>
		<result column="LIKE_FISH" property="likeFish"/>
		<result column="TAIL_FISH" property="tailFish"/>
		<result column="AUTHORITY" property="authority"/>
		<result column="ACTIVATED" property="activated"/>
		<result column="USER_LV" property="userLv"/>
		<result column="JOIN_DATE" property="joinDate"/>
		<result column="MEMBER_FILE_NO" property="memberFileNo"/>
		<result column="USER_INTRO" property="userIntro"/>
		<result column="DROP_DATE" property="dropDate"/>
	</resultMap>
	
	<!-- 신고상품 resultMap -->
	<resultMap type="ReportProduct" id="reportProductResult">
		<result column="P_NO" property="pdNo"/>
		<result column="SELLER_USER_ID" property="sellerUserId"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="P_TITLE" property="pdTitle"/>
		<result column="P_CONTENT" property="pdContent"/>
		<result column="P_PRICE" property="pdPrice"/>
		<result column="P_ENROLL_DATE" property="pdEnrollDate"/>
		<result column="P_CATEGORY" property="pdCategory"/>
		<result column="REPORTER_USER_ID" property="reporterUserId"/>
		<result column="INQUIRY_TITLE" property="inquiryTitle"/>
		<result column="INQUIRY_CONTENTS" property="inquiryContent"/>
		<result column="INQUIRY_DATE" property="inquiryDate"/>
	</resultMap> 
	
	<!-- 최근 주문내역 resultMap -->
	<resultMap type="recentOrderhistory" id="recentOrderhistoryResult">
		<result column="PAY_NO" property="payNo"/>
		<result column="USER_NAME" property="userName"/>
		<result column="PHONE" property="phone"/>
		<result column="PAY_MONEY" property="payMoney"/>
		<result column="PAY_DATE" property="payDate"/>
	</resultMap> 
	
	<!-- 탈퇴되어있지 않은 회원 수-->
	<select id="currentMemberCount" resultType="_int">
		SELECT COUNT(*)
		FROM member 
		WHERE activated = 'Y'
	</select>
	
	<!-- 탈퇴되어있는 회원 수 조회 -->
	<select id="deleteMemberCount" resultType="_int">
		SELECT COUNT(*)
		FROM member 
		WHERE activated = 'N'
	</select>
	
	<!-- 최근 회원가입한 회원 3명 조회 -->
	<select id="recentMemberList" resultMap="memberListResult">
		SELECT 	USER_NO,
				USER_ID,
				USER_PWD,
				EMAIL,
				USER_NAME,
				NICKNAME,
				BIRTHDAY,
				GENDER,
				ADDRESS,
				PHONE,
				LIKE_FISH,
				TAIL_FISH,
				AUTHORITY,
				ACTIVATED,
				USER_LV,
				JOIN_DATE,
				MEMBER_FILE_NO,
				USER_INTRO
		FROM	MEMBER
		WHERE	ACTIVATED = 'Y'
		AND		AUTHORITY &lt; 2
		ORDER BY JOIN_DATE DESC
		LIMIT 3
	</select>
	
	<!-- 관리자를 제외한 모든 회원 수 조회 -->
	<select id="memberListCount" resultType="_int">
		SELECT COUNT(*)
		FROM member
		WHERE activated = 'Y'
		AND authority &lt; 2
	</select>
	
	<!-- 관리자를 제외한 모든 회원 조회 -->
	<select id="memberList" resultMap="memberListResult">
		SELECT 	USER_NO,
				USER_ID,
				USER_PWD,
				EMAIL,
				USER_NAME,
				NICKNAME,
				BIRTHDAY,
				GENDER,
				ADDRESS,
				PHONE,
				LIKE_FISH,
				TAIL_FISH,
				AUTHORITY,
				ACTIVATED,
				USER_LV,
				JOIN_DATE,
				MEMBER_FILE_NO,
				USER_INTRO
		FROM	MEMBER
		WHERE	ACTIVATED = 'Y'
		AND		AUTHORITY &lt; 2
	</select>
	
	<!-- 검색한 회원 수 조회 -->
	<select id="searchMemberCount" resultType="_int">
		SELECT COUNT(*)
		FROM member
		WHERE activated = 'Y'
		AND authority &lt; 2
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 기간검색 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND JOIN_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 검색한 회원 조회 -->
	<select id="searchMemberList" resultMap="memberListResult">
		SELECT 	USER_NO,
				USER_ID,
				USER_PWD,
				EMAIL,
				USER_NAME,
				NICKNAME,
				BIRTHDAY,
				GENDER,
				ADDRESS,
				PHONE,
				LIKE_FISH,
				TAIL_FISH,
				AUTHORITY,
				ACTIVATED,
				USER_LV,
				JOIN_DATE,
				MEMBER_FILE_NO,
				USER_INTRO
		FROM	MEMBER
		WHERE	ACTIVATED = 'Y'
		AND		AUTHORITY &lt; 2
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 기간검색 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND JOIN_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
		
	</select>
	
	<!-- 관리자가 회원 강제 탈퇴 -->
	<update id="deleteMember">
		UPDATE member
		SET activated = 'N' 
		WHERE user_no = #{userNo}
	</update>
	
	<!-- 판매자 수 조회 -->
	<select id="sellerListCount" resultType="_int">
		SELECT COUNT(*)
		FROM member
		WHERE activated = 'Y'
		AND authority = 1
	</select>
	
	<!-- 판매자 조회 -->
	<select id="sellerList" resultMap="sellerListResult">
		SELECT user_no,
			   user_name,
			   user_id,
			   business_no,
			   business_name,
			   sub_business_name,
			   open_business_date,
			   store_name,
			   crn,
			   main_business_name,
		 	   main_item_name,
			   business_address,
			   business_account,
			   application_date				
		FROM member m
		JOIN seller_info s USING (user_no)
		WHERE m.activated = 'Y'
		AND m.authority = 1
	</select>
	
	<!-- 검색한 판매자 수 조회 -->
	<select id="searchSellerCount" resultType="_int">
		SELECT COUNT(*)
		FROM member
		JOIN seller_info s USING (user_no)
		WHERE activated = 'Y'
		AND authority = 1
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 등록일시 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND s.APPLICATION_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 검색한 판매자 조회 -->
	<select id="searchSellerList" resultMap="sellerListResult">
		SELECT user_no,
			   user_name,
			   user_id,
			   business_no,
			   business_name,
			   sub_business_name,
			   open_business_date,
			   store_name,
			   crn,
			   main_business_name,
		 	   main_item_name,
			   business_address,
			   business_account,
			   application_date		
		FROM member m
		JOIN seller_info s USING (user_no)
		WHERE m.activated = 'Y'
		AND m.authority = 1
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 등록일시 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND APPLICATION_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 판매자 신규 신청한 회원 수 조회 -->
	<select id="sellerNewApplicationCount" resultType="_int">
		SELECT COUNT(*)
		FROM member m
		JOIN seller_info s USING (user_no)
		WHERE m.authority = 0
		AND s.status = 'Y'
	</select>
	
	<!-- 판매자 신규 신청한 회원 조회 -->
	<select id="sellerNewApplicationList" resultMap="sellerListResult">
		SELECT user_no,
			   user_name,
			   user_id,
			   business_no,
			   business_name,
			   sub_business_name,
			   open_business_date,
			   store_name,
			   crn,
			   main_business_name,
		 	   main_item_name,
			   business_address,
			   business_account,
			   application_date				
		FROM member m
		JOIN seller_info s USING (user_no)
		WHERE m.authority = 0
		AND s.status = 'Y'
	</select>
	
	<!-- 검색한 판매자 신규 신청 회원 수 조회 -->
	<select id="searchSellerNewApplicationCount" resultType="_int">
		SELECT COUNT(*)
		FROM member m
		JOIN seller_info s USING (user_no)
		WHERE m.authority = 0
		AND s.status = 'Y'
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 등록일시 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND s.APPLICATION_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 검색한 판매자 신규 신청 회원 조회 -->
	<select id="searchSellerNewApplicationList" resultMap="sellerListResult">
		SELECT user_no,
			   user_name,
			   user_id,
			   business_no,
			   business_name,
			   sub_business_name,
			   open_business_date,
			   store_name,
			   crn,
			   main_business_name,
		 	   main_item_name,
			   business_address,
			   business_account,
			   application_date				
		FROM member m
		JOIN seller_info s USING (user_no)
		WHERE m.authority = 0
		AND s.status = 'Y'
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 등록일시 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND s.APPLICATION_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 판매자 신규신청 승인 -->
	<update id="sellerNewApplicationApprove">
		UPDATE member
		SET authority = 1
		WHERE user_no = #{userNo}
	</update>
	
	<!-- 판매자 신규신청 거부 -->
	<update id="sellerNewApplicationReject">
		DELETE FORM seller_info
		WHERE user_no = #{userNo}
	</update>

	<!-- 신고상품 수 조회 -->
	<select id="reportProductListCount" resultType="_int">
		SELECT COUNT(*)
		FROM product 
		JOIN faq f USING (p_no)									<!-- product의 p_no와 fap의 p_no가  같은것끼리 JOIN -->
		JOIN product_category USING (c_no)						<!-- product의 c_no와 product_category가 c_no가 같은것끼리 JOIN  -->
		JOIN seller_page USING (seller_page_no)					<!-- product_category의 seller_page_no와 seller_page의 seller_page_no가 같은것끼리 JOIN-->
		JOIN seller_info si USING (business_no)					<!-- seller_page의 business_no와 seller_info의 business_no가 같은것끼리 JOIN -->
		JOIN member seller ON si.user_no = seller.user_no		<!-- seller_info의 user_no와 member의 user_no가 같은것끼리 조인 --> <!-- si.user_no : 신고당한 판매자의 회원번호 -->
		JOIN member reporter ON f.user_no = reporter.user_no	<!-- faq의 user_no와 member의 user_no가 같은것끼리 JOIN --> <!-- f.user_no : 신고한 회원의 회원번호 -->
		WHERE report_status = true								<!-- 조건1 : product의 report_status가 true인 것 --> <!-- 신고된 상품은 status가 true임-->
		AND p_status = 'Y'										<!-- 조건2 : product의 p_status가 'Y'인 것 -->
	</select>

	<!-- 신고상품 조회 -->
	<select id="reportProductList" resultMap="reportProductResult">
		SELECT  p_no,											<!-- 신고당한 상품 번호  -->
				seller.user_id "seller_user_id", 				<!-- 신고당한 상품 판매자의 아이디  --> <!-- 이 쿼리문을 sql에서 실행하면 user_id 컬럼이 2개 조회되고 각각 seller와 reporter의 user_id 값이 들어간다, 여기서 별칭을 줘야 resultMap에 컬럼이름을 다르게 줘서 각가의 값을 조회해올 수 있다. -->
				store_name,										<!-- 신고당한 상품 판매자의 상점명-->
				p_title,										<!-- 신고당한 상품 제목-->
				p_content,										<!-- 신고당한 상품 내용-->
				p_price,										<!-- 신고당한 상품 가격-->
				p_enroll_date,  								<!-- 신고당한 상품 등록일-->
				p_category,										<!-- 신고당한 상품 카테고리-->
				reporter.user_id "reporter_user_id",			<!-- 신고한 회원의 아이디-->
				inquiry_title,									<!-- 신고 제목-->
				inquiry_contents,								<!-- 신고 내용-->
				inquiry_date									<!-- 신고 일시-->
		FROM product 
		JOIN faq f USING (p_no)									<!-- product의 p_no와 fap의 p_no가  같은것끼리 JOIN -->
		JOIN product_category USING (c_no)						<!-- product의 c_no와 product_category가 c_no가 같은것끼리 JOIN  -->
		JOIN seller_page USING (seller_page_no)					<!-- product_category의 seller_page_no와 seller_page의 seller_page_no가 같은것끼리 JOIN-->
		JOIN seller_info si USING (business_no)					<!-- seller_page의 business_no와 seller_info의 business_no가 같은것끼리 JOIN -->
		JOIN member seller ON si.user_no = seller.user_no		<!-- seller_info의 user_no와 member의 user_no가 같은것끼리 조인 --> <!-- si.user_no : 신고당한 판매자의 회원번호 -->
		JOIN member reporter ON f.user_no = reporter.user_no	<!-- faq의 user_no와 member의 user_no가 같은것끼리 JOIN --> <!-- f.user_no : 신고한 회원의 회원번호 -->
		WHERE report_status = true								<!-- 조건1 : product의 report_status가 true인 것 --> <!-- 신고된 상품은 status가 true임-->
		AND p_status = 'Y'										<!-- 조건2 : product의 p_status가 'Y'인 것 -->
	</select>
	
	<!-- 검색한 신고상품 수 조회 -->
	<select id="searchReportProductListCount" resultType="_int">
		SELECT COUNT(*)
		FROM product 
		JOIN faq f USING (p_no)									<!-- product의 p_no와 fap의 p_no가  같은것끼리 JOIN -->
		JOIN product_category USING (c_no)						<!-- product의 c_no와 product_category가 c_no가 같은것끼리 JOIN  -->
		JOIN seller_page USING (seller_page_no)					<!-- product_category의 seller_page_no와 seller_page의 seller_page_no가 같은것끼리 JOIN-->
		JOIN seller_info si USING (business_no)					<!-- seller_page의 business_no와 seller_info의 business_no가 같은것끼리 JOIN -->
		JOIN member seller ON si.user_no = seller.user_no		<!-- seller_info의 user_no와 member의 user_no가 같은것끼리 조인 --> <!-- si.user_no : 신고당한 판매자의 회원번호 -->
		JOIN member reporter ON f.user_no = reporter.user_no	<!-- faq의 user_no와 member의 user_no가 같은것끼리 JOIN --> <!-- f.user_no : 신고한 회원의 회원번호 -->
		WHERE report_status = true								<!-- 조건1 : product의 report_status가 true인 것 --> <!-- 신고된 상품은 status가 true임-->
		AND p_status = 'Y'										<!-- 조건2 : product의 p_status가 'Y'인 것 -->
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 등록일시 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND p.P_ENROLL_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 검색한 신고상품 조회 -->
	<select id="searchReportProductList" resultMap="reportProductResult">
		SELECT  p_no,											<!-- 신고당한 상품 번호  -->
				seller.user_id "seller_user_id", 				<!-- 신고당한 상품 판매자의 아이디  --> <!-- 이 쿼리문을 sql에서 실행하면 user_id 컬럼이 2개 조회되고 각각 seller와 reporter의 user_id 값이 들어간다, 여기서 별칭을 줘야 resultMap에 컬럼이름을 다르게 줘서 각가의 값을 조회해올 수 있다. -->
				store_name,										<!-- 신고당한 상품 판매자의 상점명-->
				p_title,										<!-- 신고당한 상품 제목-->
				p_content,										<!-- 신고당한 상품 내용-->
				p_price,										<!-- 신고당한 상품 가격-->
				p_enroll_date,  								<!-- 신고당한 상품 등록일-->
				p_category,										<!-- 신고당한 상품 카테고리-->
				reporter.user_id "reporter_user_id",			<!-- 신고한 회원의 아이디-->
				inquiry_title,									<!-- 신고 제목-->
				inquiry_contents,								<!-- 신고 내용-->
				inquiry_date									<!-- 신고 일시-->
		FROM product 
		JOIN faq f USING (p_no)									<!-- product의 p_no와 fap의 p_no가  같은것끼리 JOIN -->
		JOIN product_category USING (c_no)						<!-- product의 c_no와 product_category가 c_no가 같은것끼리 JOIN  -->
		JOIN seller_page USING (seller_page_no)					<!-- product_category의 seller_page_no와 seller_page의 seller_page_no가 같은것끼리 JOIN-->
		JOIN seller_info si USING (business_no)					<!-- seller_page의 business_no와 seller_info의 business_no가 같은것끼리 JOIN -->
		JOIN member seller ON si.user_no = seller.user_no		<!-- seller_info의 user_no와 member의 user_no가 같은것끼리 조인 --> <!-- si.user_no : 신고당한 판매자의 회원번호 -->
		JOIN member reporter ON f.user_no = reporter.user_no	<!-- faq의 user_no와 member의 user_no가 같은것끼리 JOIN --> <!-- f.user_no : 신고한 회원의 회원번호 -->
		WHERE report_status = true								<!-- 조건1 : product의 report_status가 true인 것 --> <!-- 신고된 상품은 status가 true임-->
		AND p_status = 'Y'										<!-- 조건2 : product의 p_status가 'Y'인 것 -->
		<!-- 검색타입과 검색어를 입력했을 때 -->
		<if test='searchType != "" and searchKeyword != ""'>
			<!-- ${}는 자동 따옴표가 안붙는데 #{}는 자동 따옴표가 붙기떄문에 컬럼이름을 써야하는 searchType에는 ${} 사용 -->
			AND	${searchType} LIKE '%' || #{searchKeyword} || '%'
		</if>
		<!-- 등록일시 날짜를 입력했을 때 -->
		<if test='startDate != "" and endDate != ""'>
			AND p.P_ENROLL_DATE BETWEEN #{startDate}::date AND #{endDate}::date
		</if>
	</select>
	
	<!-- 신고상품 삭제  -->
	<update id="reportProductRemove">
		UPDATE product
		SET report_status = false,
			p_status = 'N'
		WHERE p_no = #{pdNo}
	</update>
	
	<!-- 신고상품 무시 -->
	<update id="reportProductIgnore">
		UPDATE product
		SET report_status = false
		WHERE p_no = #{pdNo}
	</update>

	<!-- 탈퇴 회원 수 조회 -->
	<select id="customerOutCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	MEMBER
		WHERE	ACTIVATED = 'N'
	</select>
	
	<!-- 탈퇴 회원 조회 -->
	<select id="customerOutList" resultMap="memberListResult">
		SELECT	USER_NO,
				USER_ID,
				USER_NAME,
				EMAIL,
				DROP_DATE
		FROM	MEMBER
		WHERE	ACTIVATED = 'N'
		ORDER BY DROP_DATE DESC
	</select>
	
	<!-- 탈퇴 회원 수 조회(검색) -->
	<select id="searchedOutCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	MEMBER
		WHERE	ACTIVATED = 'N'
		<if test="condition == 'id'">
		 	AND	USER_ID
		</if>
		<if test="condition == 'name'">
		 	AND	USER_NAME
		</if>
		LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 탈퇴 회원 조회(검색) -->
	<select id="searchedOutlist" resultMap="memberListResult">
		SELECT	USER_NO,
				USER_ID,
				USER_NAME,
				EMAIL,
				DROP_DATE
		FROM	MEMBER
		WHERE	ACTIVATED = 'N'
		<if test="condition == 'id'">
		 	AND	USER_ID
		</if>
		<if test="condition == 'name'">
		 	AND	USER_NAME
		</if>
		LIKE '%' || #{keyword} || '%'
		ORDER BY DROP_DATE DESC
	</select>
	
	<select id="recentOrderHistory" resultMap="recentOrderhistoryResult">
		SELECT pay_no,
		   user_name,
		   phone,
		   pay_money,
		   pay_date
		FROM pay_info
		JOIN member USING (user_no)
		ORDER BY PAY_DATE DESC
		LIMIT 3
	</select>
	

</mapper>