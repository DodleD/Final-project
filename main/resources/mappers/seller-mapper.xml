<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
 <mapper namespace="sellerMapper">
 
	<resultMap type="SellerInfo" id="sellerInfoResult">
		<result column="BUSINESS_NO" property="businessNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="BUSINESS_NAME" property="businessName"/>
		<result column="SUB_BUSINESS_NAME" property="subBusinessName"/>
		<result column="OPEN_BUSINESS_DATE" property="openBusinessDate"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="CRN" property="crn"/>
		<result column="MAIN_BUSINESS_NAME" property="mainBusinessName"/>
		<result column="MAIN_ITEM_NAME" property="mainItemName"/>
		<result column="BUSINESS_ADDRESS" property="businessAddress"/>
		<result column="BUSINESS_ACCOUNT" property="businessAccount"/>
		<result column="STATUS" property="status"/>	
	</resultMap>
	
 	<resultMap type="SellerPage" id="sellerPageResult">
 		<result column="SELLER_PAGE_NO" property="sellerPageNo"/>
		<result column="BUSINESS_NO" property="businessNo"/>
		<result column="SELLER_EXPLAIN" property="sellerExplain"/>
		<result column="SP_ENROLL_DATE" property="spEnrollDate"/>
		<result column="SP_ORIGIN_NAME" property="spOriginName"/>
		<result column="SP_CHANGE_NAME" property="spChangeName"/>
	</resultMap>

	<resultMap type="ProductCategory" id="productCategoryResult">
		<result column="C_NO" property="caNo"/>
		<result column="P_CATEGORY" property="pdCategory"/>
		<result column="SELLER_PAGE_NO" property="sellerPageNo"/>
	</resultMap>
	
	<resultMap type="Product" id="productResult">
		<result column="P_NO" property="pdNo"/>
		<result column="C_NO" property="caNo"/>
		<result column="P_CATEGORY" property="pdCategory"/>
		<result column="P_TITLE" property="pdTitle"/>
		<result column="P_PRICE" property="pdPrice"/>
		<result column="P_CONTENT" property="pdContent"/>
		<result column="P_ENROLL_DATE" property="pdEnrollDate"/>
		<result column="P_STAR" property="pdStar"/>
		<result column="P_ORIGIN_NAME" property="pdOriginName"/>
		<result column="P_CHANGE_NAME" property="pdChangeName"/>	
		<result column="P_STATUS" property="pdStatus"/>	
	</resultMap> 
	
	<resultMap type="ProductOption" id="productOptionResult">
		<result column="P_COUNT" property="pdCount"/>
		<result column="PO_STATUS" property="poStatus"/>	
		<result column="P_NO" property="pdNo"/>
		<result column="P_OPTION_NAME" property="optionName"/>
		<result column="P_OPTION_NO" property="pdOptionNo"/>
	</resultMap> 
	
	<resultMap type="Review" id="ReviewResult">
		<result column="REPLY_NO" property="replyNo"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="USER_NO" property="userNo"/>
		<result column="P_NO" property="pdNo"/>
		<result column="P_TITLE" property="pdTitle"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		<result column="REVIEW_DIBS" property="reviewDibs"/>
		<result column="REVIEW_CONTENTS" property="reviewContents"/>
		<result column="RE_ORIGIN_NAME" property="reOriginName"/>
		<result column="RE_CHANGE_NAME" property="reChangeName"/>		
	</resultMap> 
	
	<resultMap type="Faq" id="FaqResult">
		<result column="FAQ_NO" property="faqNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="INQUIRY_TITLE" property="inquiryTitle"/>
		<result column="INQUIRY_CONTENTS" property="inquiryContents"/>
		<result column="INQUIRY_DATE" property="inquiryDate"/>
		<result column="P_NO" property="pdNo"/>
		<result column="INQUIRY_STATUS" property="inquiryStatus"/>
	</resultMap>
	
	<resultMap type="FaqDTO" id="FaqDTOResult">
		<result column="FAQ_NO" property="faqNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="INQUIRY_TITLE" property="inquiryTitle"/>
		<result column="INQUIRY_CONTENTS" property="inquiryContents"/>
		<result column="INQUIRY_DATE" property="inquiryDate"/>
		<result column="P_NO" property="pdNo"/>
		<result column="INQUIRY_STATUS" property="inquiryStatus"/>
		<result column="ANSWER_NO" property="answerNo"/>
		<result column="ANSWER_DATE" property="answerDate"/>
		<result column="ANSWER_CONTENTS" property="answerContents"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="P_TITLE" property="pdTitle"/>
	</resultMap>
	
	<resultMap type="StoreMainDTO" id="StoreMainDTOResult">
		<result column="SELLER_PAGE_NO" property="sellerPageNo"/>
		<result column="BUSINESS_NO" property="businessNo"/>
		<result column="P_CATEGORY" property="prCategory"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="P_NO" property="prNo"/>
		<result column="P_TITLE" property="prTitle"/>
		<result column="P_PRICE" property="prPrice"/>
		<result column="P_ENROLLDATE" property="prEnrollDate"/>
		<result column="P_STAR" property="prStar"/>
		<result column="AVERAGE_REVIEW_DIBS" property="averReviewDibs"/>
		<result column="P_CHANGE_NAME" property="prChangeName"/>
		<result column="P_STATUS" property="prStatus"/>
		<result column="USER_NO" property="userNo"/>
		<result column="REPLY_NO" property="replyNo"/>
		<result column="REVIEW_COUNT" property="reviewCount"/>
	</resultMap>
	
	<resultMap type="ProductDTO" id="ProductDTOResult">
		<result column="USER_NO" property="userNo"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="BUSINESS_NO" property="businessNo"/>
		<result column="BUSINESS_NAME" property="businessName"/>
		<result column="STORE_NAME" property="storeName"/>
		<result column="MAIN_BUSINESS_NAME" property="mainBusinessName"/>
		<result column="BUSINESS_ADDRESS" property="businessAddress"/>
		<result column="SELLER_PAGE_NO" property="sellerPageNo"/>
		<result column="C_NO" property="caNo"/>
		<result column="CATEGORY" property="category"/>
		<result column="P_NO" property="pdNo"/>
		<result column="C_NO" property="caNo"/>
		<result column="P_CATEGORY" property="pdCategory"/>
		<result column="P_TITLE" property="pdTitle"/>
		<result column="P_PRICE" property="pdPrice"/>
		<result column="P_CONTENT" property="pdContent"/>
		<result column="P_ENROLL_DATE" property="pdEnrollDate"/>
		<result column="P_STAR" property="pdStar"/>
		<result column="P_ORIGIN_NAME" property="pdOriginName"/>
		<result column="P_CHANGE_NAME" property="pdChangeName"/>	
		<result column="P_STATUS" property="pdStatus"/>	
		<result column="P_COUNT" property="pdCount"/>
		<result column="PO_STATUS" property="poStatus"/>	
		<result column="P_OPTION_NAME" property="optionName"/>
		<result column="P_OPTION_NO" property="pdOptionNo"/>
		<result column="REPLY_NO" property="pdOptionNo"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		<result column="REVIEW_DIBS" property="reviewDibs"/>
		<result column="REVIEW_CONTENTS" property="reviewContents"/>
		<result column="AVERAGE_REVIEW_DIBS" property="averReviewDibs"/>
		<result column="REVIEW_COUNT" property="reviewCount"/>
	</resultMap>
	
	<!-- ##################################### 판매자 관련  ##################################### -->
	
	<!-- 판매자 정보 불러오기  -->
	<select id="selectSeller" resultMap="sellerInfoResult">
		SELECT *
		  FROM SELLER_INFO
		 WHERE USER_NO = #{userNo}
		   AND STATUS = 'Y'
	</select>
	
	<select id="getBusinessNo" resultType="_int">
		SELECT BUSINESS_NO
		FROM SELLER_INFO
		WHERE USER_NO = #{userNo}
	</select>
	
	<select id="getSellerPageNo" resultType="_int">
	 	SELECT seller_page_no
          FROM SELLER_PAGE
         WHERE BUSINESS_NO = #{businessNo}
	</select>
	
	<insert id="insertSellerHome">
		INSERT INTO
					SELLER_PAGE (
								 business_no,
								 seller_explain,
								 sp_enroll_Date,
								 sp_origin_name,
								 sp_change_name
								 
								 )
						 VALUES (
						 		 #{businessNo},
								 #{sellerExplain},
								 default,
								 #{spOriginName},
								 #{spChangeName}
								 							 		 
						 		 )	 
	</insert>
	
	<insert id="insertProductCategory">
		INSERT INTO 
					PRODUCT_CATEGORY (
								 	  p_category,
								 	  seller_page_no
								 	  )
						 	  VALUES (
							 		  #{category}, 
							 		  CURRVAL('seller_page_seller_page_no_seq'::regclass)
						 		 	  )	
	</insert>

	<select id="selectCategories" resultMap="productCategoryResult">
		SELECT P_CATEGORY,
			   C_NO	
		  FROM PRODUCT_CATEGORY
		  JOIN SELLER_PAGE USING (SELLER_PAGE_NO)
		WHERE BUSINESS_NO = #{businessNo}
	</select>
	
	<select id="selectSellerHomeDetail" resultMap="sellerPageResult">
		SELECT SELLER_PAGE_NO,
			   SELLER_EXPLAIN,
			   SP_ORIGIN_NAME,
			   SP_CHANGE_NAME
		  FROM SELLER_PAGE
		 WHERE BUSINESS_NO = #{businessNo}
	</select>
	
	<update id="updateSellerHome">
		UPDATE SELLER_PAGE
		   SET SELLER_EXPLAIN = #{sellerExplain},
		   	   SP_ENROLL_DATE = CURRENT_TIMESTAMP,
		   	   <if test="spOriginName !=null">
		   	   SP_ORIGIN_NAME = #{spOriginName},
		   	   SP_CHANGE_NAME = #{spChangeName}
		   	   </if>
		 WHERE BUSINESS_NO = #{businessNo}   			
	</update>
	
	<insert id="insertNewProductCategory">
		INSERT INTO 
					PRODUCT_CATEGORY (
								 	  p_category,
								 	  seller_page_no
								 	  )
						 	  VALUES (
							 		  #{pdCategory}, 
							 		  #{sellerPageNo}
						 		 	  )	
	</insert> 
	
 	<delete id="deleteProductCategory">
		DELETE FROM PRODUCT_CATEGORY
		 WHERE C_NO = #{caNo} 
	</delete>
	
<!-- 	<select id="countByBusinessNo" resultType="int">
        SELECT COUNT(*)
        FROM SELLER_PAGE
        WHERE BUSINESS_NO = #{businessNo}
    </select> -->
	
	<insert id="insertProduct">
	INSERT INTO 
				PRODUCT (
				 	      c_no,
				 	      p_title,
				 	      p_price,
				 	      p_content,
				 	      p_enroll_date,
				 	      p_origin_name,
				 	      p_change_name,
				 	      p_status
				 	     )
		 	     VALUES (
			 		      #{caNo},
			 		      #{pdTitle},
			 		      #{pdPrice},
			 		      #{pdContent},
			 		      default,
			 		      #{pdOriginName},
			 		      #{pdChangeName},
			 		      default
		 		 	     )	
	</insert>
	
	<insert id="insertProductOption">
		INSERT INTO 
					PRODUCT_OPTION (
									  p_count,
								 	  po_status,
								 	  p_no,
								 	  p_option_name
								 	  )
						 	  VALUES (
							 		  #{pdCount},
							 		  default,
							 		  CURRVAL('product_p_no_seq'::regclass),
							 		 #{optionName}
						 		 	  )	
	</insert>
	
	<!-- 상품 리스트 페이징  -->
	<select id="selectProductListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		  JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
		 WHERE P_STATUS = 'Y'
		   AND BUSINESS_NO = #{businessNo}
	</select>
	
	<!-- 상품 리스트 -->
	<select id="selectProductList" resultMap="productResult">
		SELECT P_NO,
			   C_NO,
			   P_CATEGORY,
			   P_TITLE,
			   TO_CHAR(P_ENROLL_DATE , 'YYYY-MM-DD') AS "P_ENROLL_DATE"
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		  JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
		 WHERE P_STATUS = 'Y'
		   AND BUSINESS_NO = #{businessNo}
		 ORDER BY P_NO DESC; 
	</select>
	
	<!-- 상품 리스트 검색 -->
	<select id="searchProductListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		  JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
		 WHERE P_STATUS = 'Y'
		   AND BUSINESS_NO = #{businessNo}
		<if test="condition == 'category'">
		 	AND	P_CATEGORY
		</if>
		<if test="condition == 'productName'">
		 	AND	P_TITLE
		</if>
		LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="searchProductList" resultMap="productResult">
		SELECT P_NO,
			   C_NO,
			   P_CATEGORY,
			   P_TITLE,
			   TO_CHAR(P_ENROLL_DATE , 'YYYY-MM-DD') AS "P_ENROLL_DATE"
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		  JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
		 WHERE P_STATUS = 'Y'
		   AND BUSINESS_NO = #{businessNo}
		 <if test="condition == 'category'">
		 	AND	P_CATEGORY
		 </if>
		 <if test="condition == 'productName'">
		 	AND	P_TITLE
		 </if>
		 LIKE '%' || #{keyword} || '%'
		 ORDER BY P_NO DESC 
	</select>
	
	
	<select id="selectOptions" resultMap="productOptionResult">
		SELECT P_COUNT,
			   P_OPTION_NAME,
			   P_OPTION_NO	
		  FROM PRODUCT_OPTION
		WHERE P_NO = #{pno}
	</select>
	
	<select id="selectProduct" resultMap="productResult">
		SELECT *
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		 WHERE P_STATUS = 'Y'
		   AND P_NO = #{pno}
	</select>
	
	<!-- 상품 정보 수정  -->
	<update id="updateProduct">
	    UPDATE PRODUCT
	    SET 
	        P_TITLE = #{pdTitle},
	        <if test="pdOriginName != null">
	            P_ORIGIN_NAME = #{pdOriginName},
	            P_CHANGE_NAME = #{pdChangeName},
	        </if>
	        P_CONTENT = #{pdContent}
	    WHERE P_NO = #{pno}
	</update>

	
	<insert id="insertNewProductOption">
		INSERT INTO 
					PRODUCT_OPTION (
									  p_count,
								 	  po_status,
								 	  p_no,
								 	  p_option_name
								 	  )
						 	  VALUES (
							 		  #{pdCount},
							 		  default,
							 		  #{pno},
							 		 #{optionName}
						 		 	  )	
	</insert>
	
	<update id="updateProductOption">
	    UPDATE PRODUCT_OPTION
	    <set>
	        <if test="pdCount != null">
	            P_COUNT = #{pdCount},
	        </if>
	        <if test="optionName != null">
	            P_OPTION_NAME = #{optionName},
	        </if>
	    </set>
	    WHERE P_OPTION_NO = #{pdOptionNo}
	</update>

	
	<delete id="deleteProductOption">
		DELETE FROM PRODUCT_OPTION
		 WHERE P_OPTION_NO = #{pdOptionNo} 
	</delete>
	
	<!-- 상품 삭제 -->
	<update id="deleteProduct">
		UPDATE PRODUCT
		   SET P_STATUS = 'N' 
		 WHERE P_NO = #{pno} 
	</update>
	
	<!-- 주문 관리 -->
	
	<!-- 배송 관리 -->
	
	<!-- 고객 문의 관리 -->	
	<select id="selectCsInquiryListCount" resultType="_int">
	select count(*)
	  from member m
	  join seller_info s using(user_no)
	  join seller_page using(business_no)
	  join product_category using(seller_page_no)
	  join product using(c_no)
	  join faq f using(p_no)
	  join member nm on(f.user_No = nm.user_no )
	 where m.user_no = #{userNo} and f.inquiry_status = 0
	</select>
	
	<select id="selectCsInquiryList" resultMap="FaqDTOResult">
	select faq_no,p_title,f.user_no,nm.nickname,
			TO_CHAR(f.inquiry_date, 'YYYY-MM-DD') as "inquiry_date", inquiry_title,inquiry_contents
	  from member m
	  join seller_info s using(user_no)
	  join seller_page using(business_no)
	  join product_category using(seller_page_no)
	  join product using(c_no)
	  join faq f using(p_no)
	  join member nm on(f.user_No = nm.user_no )
	 where m.user_no = #{userNo} and f.inquiry_status = 0
	 order by f.faq_no desc
	</select>
	
	<!-- 고객 문의 답변 -->
	<insert id="insertInquiryAnswer">
		INSERT INTO FAQ_ANSWER
							  (
							   FAQ_NO,
							   USER_NO,
							   ANSWER_CONTENTS								  
							   )
						VALUES(
							   #{faqNo},
							   #{userNo},
							   #{answerContents}
							   )	  						
	
	</insert>
	
	<update id="updateInquiry">
		UPDATE FAQ
		   SET INQUIRY_STATUS = 1
		WHERE FAQ_NO = #{faqNo} 
		   
	</update>
	
	<!-- 고객 문의 검색 -->
	<select id="searchInquiryListCount" resultType="_int">
		select count(*)
		  from member m
		  join seller_info s using(user_no)
		  join seller_page using(business_no)
		  join product_category using(seller_page_no)
		  join product using(c_no)
		  join faq f using(p_no)
		  join member nm on(f.user_No = nm.user_no )
		 where m.user_no = #{userNo} and f.inquiry_status = 0
		<if test="condition == 'productName'">
		 	and p_title LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<select id="searchInquiryList" resultMap="FaqDTOResult">
		select faq_no,p_title,f.user_no,nm.nickname,
				TO_CHAR(f.inquiry_date, 'YYYY-MM-DD') as inquiry_date,inquiry_title,inquiry_contents
		  from member m
		  join seller_info s using(user_no)
		  join seller_page using(business_no)
		  join product_category using(seller_page_no)
		  join product using(c_no)
		  join faq f using(p_no)
		  join member nm on(f.user_No = nm.user_no )
		 where m.user_no = #{userNo} and f.inquiry_status = 0
		<if test="condition == 'productName'">
		 	and p_title LIKE '%' || #{keyword} || '%'
		</if>
		 order by f.faq_no desc
	</select>

	
	<!-- 판매자 탈퇴 -->
	<update id="updateMemberAuthority">
		UPDATE MEMBER
		   SET AUTHORITY = 0
		   WHERE USER_NO = #{userNo}
	</update>
	
	<delete id="deleteSellerinfo">
		DELETE FROM SELLER_INFO
		 WHERE USER_NO = #{userNo}	
	</delete>
	
	<!-- ##################################### 스토어 메인  ##################################### -->
	
	<select id="selectPopularList" resultMap="StoreMainDTOResult">
		SELECT *
		  FROM (
			    SELECT P_NO ,STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, CAST(AVG(REVIEW.review_dibs) AS DECIMAL(10, 1)) AS AVERAGE_REVIEW_DIBS, COUNT(REVIEW.REPLY_NO) AS REVIEW_COUNT
			    FROM PRODUCT
			    JOIN PRODUCT_CATEGORY USING(C_NO)
			    JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
			    JOIN SELLER_INFO USING(BUSINESS_NO)
			    LEFT JOIN REVIEW USING(P_NO)
			    WHERE P_STATUS = 'Y'
			    GROUP BY P_NO ,STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME 
			    ORDER BY AVERAGE_REVIEW_DIBS
			    )
		 LIMIT 10
	</select>
	
	<select id="selectRecentList" resultMap="StoreMainDTOResult">
		SELECT *
		  FROM (
		        SELECT P_NO, STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, CAST(AVG(REVIEW.review_dibs) AS DECIMAL(10, 1)) AS AVERAGE_REVIEW_DIBS, COUNT(REVIEW.REPLY_NO) AS REVIEW_COUNT
		        FROM PRODUCT
			    JOIN PRODUCT_CATEGORY USING(C_NO)
			    JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
			    JOIN SELLER_INFO USING(BUSINESS_NO)
			    LEFT JOIN REVIEW USING(P_NO)
			    WHERE P_STATUS = 'Y'
			    GROUP BY P_NO, STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, P_ENROLL_DATE
			    ORDER BY P_ENROLL_DATE DESC
			    )
		 LIMIT 10
	</select>
	
	<select id="selectAllProduct" resultMap="StoreMainDTOResult">
		SELECT P_NO, STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, CAST(AVG(REVIEW.review_dibs) AS DECIMAL(10, 1)) AS AVERAGE_REVIEW_DIBS, COUNT(REVIEW.REPLY_NO) AS REVIEW_COUNT
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		  JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
		  JOIN SELLER_INFO USING(BUSINESS_NO)
		  LEFT JOIN REVIEW USING(P_NO)
		 WHERE P_STATUS = 'Y'
		 GROUP BY P_NO, STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, P_STAR, P_ENROLL_DATE
		 ORDER BY P_ENROLL_DATE DESC
	</select>
	
	<select id="selectSearchProduct" resultMap="StoreMainDTOResult">
		SELECT P_NO, STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, CAST(AVG(REVIEW.review_dibs) AS DECIMAL(10, 1)) AS AVERAGE_REVIEW_DIBS, COUNT(REVIEW.REPLY_NO) AS REVIEW_COUNT
		  FROM PRODUCT
		  JOIN PRODUCT_CATEGORY USING(C_NO)
		  JOIN SELLER_PAGE USING(SELLER_PAGE_NO)
		  JOIN SELLER_INFO USING(BUSINESS_NO)
		  LEFT JOIN REVIEW USING(P_NO)
		 WHERE P_STATUS = 'Y'
		 AND  P_TITLE like('%' || #{title} || '%')
		 GROUP BY P_NO, STORE_NAME,SELLER_PAGE_NO, P_TITLE, P_PRICE, P_CHANGE_NAME, P_STAR, P_ENROLL_DATE
		 ORDER BY P_ENROLL_DATE DESC
	</select>
	
	<!-- ##################################### 판매 상품 상세 페이지  ##################################### -->
	
	<select id="selectSalesProduct" resultMap="ProductDTOResult">
		SELECT EMAIL, PHONE, BUSINESS_NO, BUSINESS_NAME, STORE_NAME, SELLER_PAGE_NO,
		       MAIN_BUSINESS_NAME, BUSINESS_ADDRESS, P_NO, P_TITLE, 
		       P_PRICE, P_CONTENT, P_CHANGE_NAME,
		       CAST(AVG(REVIEW.review_dibs) AS DECIMAL(10, 1)) AS AVERAGE_REVIEW_DIBS,
		       COUNT(REVIEW.REPLY_NO) AS REVIEW_COUNT
		  FROM MEMBER
		  JOIN SELLER_INFO USING(USER_NO)
		  JOIN SELLER_PAGE USING(BUSINESS_NO)
		  JOIN PRODUCT_CATEGORY USING(SELLER_PAGE_NO)
		  JOIN PRODUCT USING(C_NO)
		  LEFT JOIN REVIEW USING(P_NO)
		 WHERE P_STATUS = 'Y' AND P_NO = #{pno}
		 GROUP BY EMAIL, PHONE, BUSINESS_NO, BUSINESS_NAME, STORE_NAME, SELLER_PAGE_NO,
		          MAIN_BUSINESS_NAME, BUSINESS_ADDRESS, P_NO, P_TITLE, 
		          P_PRICE, P_CONTENT, P_CHANGE_NAME
	</select>
	
	<!-- 상품 구매한 유저 번호 가져오기  -->
	<select id="getPayUserNo" resultMap="ReviewResult">
	SELECT DISTINCT user_no
		FROM pay_info
		JOIN product_option
		ON product_option.p_option_no = ANY(pay_info.p_option_no)
		WHERE product_option.p_no = #{pno};
	</select>
	
	<!-- 리뷰 리스트 페이징 -->
	<select id="selectReviewListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE P_NO = #{pno}
	</select>
	
	<!-- 리뷰 가져오기 -->
	<select id="selectReviewList" resultMap="ReviewResult">
	    SELECT
	        MEMBER.nickName,
	        REVIEW.review_dibs,
	        TO_CHAR(REVIEW.review_date, 'YYYY-MM-DD') as "review_date",
	        PRODUCT.p_title,
	        REVIEW.review_contents,
	        p_no
	        <if test="change_name != null and re_change_name == null">
	             ,change_name
	        </if>
	        <if test="change_name == null and re_change_name != null">
	            ,REVIEW.re_change_name
	        </if>
	        <if test="change_name != null and re_change_name != null">
	            , REVIEW.re_change_name,change_name
	        </if>
	    FROM REVIEW
	    JOIN MEMBER USING (USER_NO)
	    JOIN PRODUCT USING (P_NO)
	    LEFT JOIN MEMBER_ATTACHMENT ON (USER_NO = REF_MNO)
	    WHERE P_NO = #{pno}
	    ORDER BY REPLY_NO DESC
	</select>

	<!-- 문의 리스트 페이징  -->
    <select id="selectInquiryListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM FAQ
		 WHERE P_NO = #{pno}
	</select>	
	
	<!-- 문의 가져오기 -->
	<select id="selectInquiryList" resultMap="FaqDTOResult">
	 SELECT M.NICKNAME,
	 		TO_CHAR(F.INQUIRY_DATE, 'YYYY-MM-DD') as "INQUIRY_DATE",
	 		F.INQUIRY_TITLE,
	 		F.INQUIRY_CONTENTS,
	 		P_NO,FA.ANSWER_DATE,
	 		FA.ANSWER_CONTENTS
	   FROM FAQ F
	   LEFT JOIN FAQ_ANSWER FA USING(FAQ_NO)
	   LEFT JOIN MEMBER M ON(F.USER_NO = M.USER_NO)
	  WHERE P_NO = #{pno}
	  ORDER BY F.FAQ_NO DESC
	</select>
	
	<!-- 장바구니 담기 -->
	 <insert id="insertCart" parameterType="list">
        INSERT INTO BUY (
            user_no, 
            p_option_no, 
            buy_count, 
            buy_money
        )
        VALUES 
        <foreach collection="list" item="item" separator=",">
            (
                #{item.userNo}, 
                #{item.pdOptionNo}, 
                #{item.buyCount}, 
                #{item.optionPrice}
            )
        </foreach>
    </insert>
	
	<!-- 리뷰 쓰기 -->
	<insert id="insertReview">
	insert into 
		 review(
		 		user_no,
	 			p_no,
	 			review_dibs,
	 			review_contents,
	 			re_origin_name,
	 			re_change_name
	 			)
		 values(
		 		#{userNo},
		 		#{pno},
		 		#{reviewDibs},
		 		#{reviewContents},
		 		#{reOriginName},
		 		#{reChangeName}
		        )
	
	</insert>
	
	<!-- 문의 쓰기 -->
	<insert id="insertInquiry">
		insert into
				faq(
					user_no,
					inquiry_title,
					inquiry_contents,
					p_no
					)
			 values(
			 		#{userNo},
			 		#{inquiryTitle},
			 		#{inquiryContents},
			 		#{pno}
					)	
	</insert>
	
	<!-- ##################################### 구매 페이지  ##################################### -->
	
	<!-- 구매 페이지 -->
	
	<select id="getFishProductList" resultMap="productResult">
		SELECT p_no,
			   p_title,
			   p_price,
			   P_CHANGE_NAME
		FROM product
		WHERE P_STATUS = 'Y'
		ORDER BY RANDOM()
		LIMIT 5
	</select>
	
	<select id="getBusinessNoToProductName" resultType="_int">
	select business_no
		from product
		join product_category using(c_no)
		join seller_page using(seller_page_no)
		where p_title = #{productName}
	</select>

	
	<!-- 상품 구매 -->
	<insert id="insertOrder">
    INSERT INTO pay_info (
        p_option_no, 	
        user_no, 
        business_no, 
        pay_count,
        pay_money, 
        delivery_address, 
        delivery_detail_address, 
        delivery_name,
        recipient,
        recipient_phone
    )
    VALUES (
          ARRAY[#{pdOptionNo}]::INTEGER[], 
        #{userNo}, 
        #{businessNo},
        ARRAY[#{payCount}]::INTEGER[], 
        #{payMoney}, 
        #{deliveryAddress}, 
        #{deliveryDetailAddress},
        #{deliveryName},
        #{recipient},
        #{recipientPhone}
    )
</insert>

	
	
</mapper>