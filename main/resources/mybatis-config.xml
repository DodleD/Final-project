<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-config.dtd">
  
 <configuration>
 	<!-- settings : mybatis구동시 선언할 설정들을 작성하는 영역 -->
 	<settings>
 		<!-- 만약 null로 데이터가 전달되었다면 빈칸이 아닌 null로 인식해라(무조건 대문자 NULL) -->
 		<setting name="jdbcTypeForNull" value="NULL"/>
 	</settings>
 	
 	<!-- typeAlias : VO/DTO 클래스들의 풀클래스명을 단순한 클래스명(별칭)으로 사용하기위한 별칭을 등록하는 영역-->
 	<typeAliases>
 		<!-- <typeAlias type="com.kh.spring.board.model.vo.Reply" alias="Reply" /> -->
 		<typeAlias type="com.psvm.example.vo.test" alias="test" />
 		<typeAlias type="com.psvm.member.vo.Member" alias="Member"/>
 		<typeAlias type="com.psvm.member.vo.MemberAttachment" alias="MemberAttachment"/>
 		<typeAlias type="com.psvm.community.vo.Community" alias="Community"/>
 		<typeAlias type="com.psvm.community.vo.Reply" alias="Reply"/>
 		<typeAlias type="com.psvm.community.vo.ThumbUp" alias="ThumbUp"/>
 		<typeAlias type="com.psvm.seller.vo.SellerInfo" alias="SellerInfo"/>
 		<typeAlias type="com.psvm.seller.vo.SellerPage" alias="SellerPage"/>
 		<typeAlias type="com.psvm.seller.vo.ProductCategory" alias="ProductCategory"/>
 		<typeAlias type="com.psvm.seller.vo.Product" alias="Product"/>
 		<typeAlias type="com.psvm.seller.vo.ProductOption" alias="ProductOption"/>
 		<typeAlias type="com.psvm.store.vo.StoreInfo" alias="StoreInfo"/>
 		<typeAlias type="com.psvm.fishInfo.vo.Fish" alias="Fish"/>
 		<typeAlias type="com.psvm.myPage.vo.Inquiry" alias="Inquiry"/>
 		<typeAlias type="com.psvm.manager.vo.Seller" alias="Seller"/>
 		<typeAlias type="com.psvm.curation.vo.Curation" alias="Curation"/>
 		<typeAlias type="com.psvm.cs.vo.Cs" alias="Cs"/>
 		<typeAlias type="com.psvm.seller.dto.StoreMainDTO" alias="StoreMainDTO"/>
 		<typeAlias type="com.psvm.manager.vo.ReportProduct" alias="ReportProduct"/>
 		<typeAlias type="com.psvm.seller.dto.ProductDTO" alias="ProductDTO"/>
 		<typeAlias type="com.psvm.seller.vo.Review" alias="Review"/>
 	</typeAliases>
 	
 	<!-- 
 		environment, dataSource에 기술했던 db연결관련 정보들은 root-context.xml에 작성할 것이다.
 		왜? db등록은 서버연동과 동시에 같이 이뤄져야하기 때문에
 		서버스타트와 동시에 바로 읽혀지는 root-context.xml문서에 기술하고 등록해서 스프링으로부터 주입받는다.
 	 -->
 	<!-- mappers : 실행할 sql문들을 기록해둔 mapper파일들을 등록하는 영역 -->
 	<mappers>
 		<mapper resource="/mappers/member-mapper.xml"/>
 		<mapper resource="/mappers/board-mapper.xml"/>
 		<mapper resource="/mappers/myPage-mapper.xml"/>
 		<mapper resource="/mappers/community-mapper.xml"/>
 		<mapper resource="/mappers/seller-mapper.xml"/>
 		<mapper resource="/mappers/fish-mapper.xml"/>
 		<mapper resource="/mappers/manager-mapper.xml"/>
 		<mapper resource="/mappers/curation-mapper.xml"/>
 		<mapper resource="/mappers/store-mapper.xml"/>
 		<mapper resource="/mappers/cs-mapper.xml"/>
 	</mappers>

 	
 </configuration>